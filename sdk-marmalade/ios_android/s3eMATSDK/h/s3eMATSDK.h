/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_MATSDK_H
#define S3E_EXT_MATSDK_H

#include <s3eTypes.h>

#define S3E_MATSDK_STRING_MAX 50

struct s3eMATTracker;

typedef struct MATSDKEventItem
{
	char		item[S3E_MATSDK_STRING_MAX];
	float 		unitPrice;
	int		quantity;
	float		revenue;
} MATSDKEventItem;

typedef struct MATArray {
	void *m_items; // Items in array
	unsigned int m_count; // number of items
} MATArray;
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the MATSDK extension is available.
 */
s3eBool s3eMATSDKAvailable();

void MATStartMobileAppTracker(const char* adId, const char* adKey);

void MATSDKParameters();

void MATTrackInstall();

void MATTrackUpdate();

void MATTrackInstallWithReferenceId(const char* refId);

void MATTrackActionForEventIdOrName(const char* eventIdOrName, bool isId, const char* refId);

void MATTrackActionForEventIdOrNameItems(const char* eventIdOrName, bool isId, const MATArray* items, const char* refId, double revenueAmount, const char* currencyCode, uint8 transactionState);

void MATTrackAction(const char* eventIdOrName, bool isId, double revenue, const char*  currency);

void MATStartAppToAppTracking(const char* targetAppId, const char* advertiserId, const char* offerId, const char* publisherId, bool shouldRedirect);

void MATSetPackageName(const char* packageName);

void MATSetCurrencyCode(const char* currencyCode);

void MATSetDeviceId(const char* deviceId);

void MATSetOpenUDID(const char* openUDID);

void MATSetUserId(const char* userId);

void MATSetRevenue(double revenue);

void MATSetSiteId(const char* siteId);

void MATSetTRUSTeId(const char* tpid);

void MATSetDelegate(bool enable);

void MATSetUseHTTPS(bool enable);

void MATSetAllowDuplicates(bool allowDuplicates);

void MATSetShouldAutoGenerateMacAddress(bool shouldAutoGenerate);

void MATSetShouldAutoGenerateODIN1Key(bool shouldAutoGenerate);

void MATSetShouldAutoGenerateOpenUDIDKey(bool shouldAutoGenerate);

void MATSetShouldAutoGenerateVendorIdentifier(bool shouldAutoGenerate);

void MATSetShouldAutoGenerateAdvertiserIdentifier(bool shouldAutoGenerate);

void MATSetUseCookieTracking(bool useCookieTracking);

void MATSetRedirectUrl(const char* redirectUrl);

void MATSetAdvertiserIdentifier(const char* advertiserId);

void MATSetVendorIdentifier(const char* vendorId);

void MATSetDebugResponse(bool shouldDebug);

S3E_END_C_DECL


#endif /* !S3E_EXT_MATSDK_H */
